import re
from datetime import datetime
from langchain.tools import Tool

def adaptive_plan(prompt: str) -> str:
    prompt = prompt.lower()

    # ----------- PLANES BASE SEG√öN POSICI√ìN -----------
    planes_por_posicion = {
        "delantero": [
            "Finalizaci√≥n en el √°rea con presi√≥n",
            "Fuerza explosiva tren superior y core",
            "T√°ctica de desmarques en zona de ataque",
            "Velocidad + definici√≥n en 1v1",
            "Simulaci√≥n de partido"
        ],
        "mediocentro": [
            "T√©cnica de pase bajo presi√≥n",
            "Resistencia + fuerza tren inferior",
            "Juego posicional + visi√≥n t√°ctica",
            "Transiciones ofensivo-defensivas",
            "Simulaci√≥n de partido + bal√≥n parado"
        ],
        "defensa": [
            "Bloque defensivo y coberturas",
            "Fuerza tren inferior + propiocepci√≥n",
            "Duelos a√©reos y despejes",
            "Velocidad de reacci√≥n en repliegue",
            "Simulaci√≥n de partido defensivo"
        ],
        "portero": [
            "Reflejos + blocaje 1v1",
            "Fuerza tren inferior + pliometr√≠a",
            "Saques y juego de pies",
            "Trabajo t√°ctico con l√≠nea defensiva",
            "Simulaci√≥n con tiros reales"
        ]
    }

    # ----------- RESTRICCIONES SEG√öN LESI√ìN -----------
    restricciones = []
    recomendaciones = []

    if "tobillo" in prompt:
        restricciones += ["saltos", "contacto", "cambios de direcci√≥n"]
        recomendaciones += [
            "‚ö†Ô∏è Evita saltos, contacto f√≠sico y cambios bruscos de direcci√≥n.",
            "‚úÖ Usa el√≠ptica, piscina, movilidad articular y propiocepci√≥n asistida."
        ]

    if "rodilla" in prompt:
        restricciones += ["impacto", "pliometr√≠a", "sentadillas profundas"]
        recomendaciones += [
            "‚ö†Ô∏è Evita ejercicios de impacto y pliometr√≠a.",
            "‚úÖ Trabaja con bandas, movilidad suave, bici est√°tica y fuerza de core."
        ]

    if "cu√°driceps" in prompt or "isquios" in prompt:
        restricciones += ["sprints", "explosivos", "carga pesada"]
        recomendaciones += [
            "‚ö†Ô∏è Evita ejercicios explosivos y carga m√°xima.",
            "‚úÖ Enf√≥cate en isometr√≠a, activaci√≥n controlada y estiramientos guiados."
        ]

    # ----------- DETECCI√ìN DE POSICI√ìN Y D√çAS -----------
    posicion = None
    for pos in planes_por_posicion.keys():
        if pos in prompt:
            posicion = pos
            break

    if not posicion:
        return "‚ùå No se detect√≥ la posici√≥n del jugador. Especifica si eres delantero, mediocentro, defensa o portero."

    dias = 5  # por defecto
    match = re.search(r"juego en (\d+) d√≠as", prompt)
    if match:
        dias = min(int(match.group(1)), 5)

    plan_base = planes_por_posicion[posicion][:dias]
    hoy = datetime.today()
    dias_semana = ["Lunes", "Martes", "Mi√©rcoles", "Jueves", "Viernes", "S√°bado", "Domingo"]

    # ----------- PLAN PERSONALIZADO -----------
    plan_personalizado = [f"üìÖ Plan adaptado ({posicion}) para los pr√≥ximos {dias} d√≠as:\n"]

    for i in range(dias):
        dia = dias_semana[(hoy.weekday() + i) % 7]
        sesion = plan_base[i]

        # Adaptar sesi√≥n si tiene alguna actividad restringida
        if any(palabra in sesion.lower() for palabra in restricciones):
            sesion += " ‚ö†Ô∏è adaptado: evitar actividades incompatibles con la lesi√≥n."
        plan_personalizado.append(f"- {dia}: {sesion}")

    # ----------- RECOMENDACIONES ADICIONALES -----------
    if recomendaciones:
        plan_personalizado.append("\nü©∫ Recomendaciones espec√≠ficas por lesi√≥n:")
        plan_personalizado += [f"- {r}" for r in recomendaciones]

    return "Final Answer: " + "\n".join(plan_personalizado)


AdaptivePlannerTool = Tool(
    name="AdaptivePlannerTool",
    func=adaptive_plan,
    description=(
        "Usa esta herramienta para generar un plan de entrenamiento personalizado de varios d√≠as "
        "basado en la posici√≥n del jugador, d√≠as hasta el partido y lesiones actuales. "
        "Devuelve directamente el texto final para entregar al usuario.\n\n"
        "Ejemplo de uso: 'Juego en 3 d√≠as con dolor de tobillo como delantero'."
    )
)